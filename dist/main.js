(()=>{"use strict";class e{constructor(e){this.owner=e,this.board=[],this.fleet=[],this.bucket=[],this.loser=!1}generateBoard(){for(let e=0;e<10;e++)this.board[e]=new Array(10).fill(null);return this.board}assembleFleet(e){this.fleet.includes(e)||(this.bucket.push(e),this.fleet.push(e))}placeShip(e,t,r){if(this.isLegal(e,t,r))if("horizontal"===e.orientation)for(let n=0;n<e.length;n++)this.board[t][r+n]=e;else for(let n=0;n<e.length;n++)this.board[t+n][r]=e}random(){return Math.floor(10*Math.random())}computerPlacement(){const e=this.random(),t=this.random();for(let r=0;r<this.fleet.length;r++)if("horizontal"!==this.fleet[r].orientation||this.isLegal(this.fleet[r],e,t))for(let n=0;n<this.fleet[r].length;n++&&!this.isLegal(this.fleet[r],e,t))this.board[e+n][t]=this.fleet[r];else for(let n=0;n<this.fleet[r].length;n++)this.board[e][t+n]=this.fleet[r]}isLegal(e,t,r){if(t<0||t>9||r<0||r>9)return!1;if("horizontal"===e.orientation){if(r+e.length>9)return!1;for(let n=0;n<e.length;n++)if(this.board[t][r+n])return!1}else if("vertical"===e.orientation){if(t+e.length>9)return!1;for(let n=0;n<e.length;n++)if(this.board[t+n][r])return!1}return!0}receiveAttack(e,t){"hit"!==this.board[e][t]&&"miss"!==this.board[e][t]&&(null===this.board[e][t]?this.board[e][t]="miss":this.board[e][t]="hit")}gameOver(){this.loser=this.fleet.every((e=>e.isSunk()))}}const t=document.getElementById("player-container"),r=document.getElementById("computer-container"),n=new e("human"),l=new e("computer"),i=new class{appendCells(e,t,r){return`<div class="cell ${r}" data-row="${e}" data-col="${t}" ></div>`}renderBoard(e,t){this.resetBoard(e);let r="";for(let e=0;e<t.board.length;e++)for(let n=0;n<t.board.length;n++){console.log("working");let l=t.board[e][n];null===l?l="":l.name&&(l="human"===t.owner?l.name:""),r+=this.appendCells(e,n,l)}e.insertAdjacentHTML("afterbegin",r)}renderFleet(e){const t=document.getElementById("ships");for(let r=0;r<e.fleet.length;r++){let n=e.fleet[r];t.classList.add(`${n.name}-docked`),t.setAttribute("draggable",!0),t.dataset.ship=`${n.name}`;for(let e=0;e<n.length;r++)t.innerHTML+=`<div class=${n.name} data-index='${r}'></div>`;elements.fleetDraggable.prepend(t)}}resetBoard(e){e.textContent=""}};window.addEventListener("DOMContentLoaded",(()=>{n.generateBoard(),l.generateBoard(),i.renderBoard(t,n),i.renderBoard(r,l)}))})();
//# sourceMappingURL=main.js.map